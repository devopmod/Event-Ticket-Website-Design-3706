// –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É —Å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–µ–π —Å—Ç–∞—Ç—É—Å–∞ "held" -> "hold"
import supabase from '../lib/supabase';

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å—ã –º–µ—Å—Ç
const testSeatStatuses = async () => {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –º–µ—Å—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
    console.log('–®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –≤ –±–∞–∑–µ...');
    const { data: eventSeats, error } = await supabase
      .from('event_seats_fanaticka_7a3x9d')
      .select('status')
      .limit(10);
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤:', error);
    } else {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã:', eventSeats.map(s => s.status));
    }
    
    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ "held"
    console.log('\n–®–∞–≥ 2: –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ "held"...');
    const testEventId = '12345'; // –¢–µ—Å—Ç–æ–≤—ã–π ID —Å–æ–±—ã—Ç–∏—è
    const testSeatId = 'test-seat-1'; // –¢–µ—Å—Ç–æ–≤—ã–π ID –º–µ—Å—Ç–∞
    
    // –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –º–µ—Å—Ç–æ
    const { error: insertError } = await supabase
      .from('event_seats_fanaticka_7a3x9d')
      .insert([{
        event_id: testEventId,
        seat_id: testSeatId,
        status: 'free',
        section: 'TEST',
        row: 1
      }]);
    
    if (insertError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –º–µ—Å—Ç–æ (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç):', insertError);
    }
    
    // –¢–µ–ø–µ—Ä—å –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ
    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ "held"...');
    const { data: updateData, error: updateError } = await supabase
      .from('event_seats_fanaticka_7a3x9d')
      .update({ status: 'held' })
      .eq('event_id', testEventId)
      .eq('seat_id', testSeatId)
      .select();
    
    if (updateError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ "held":', updateError);
    } else {
      console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updateData);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª–æ —Ä–µ–∞–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å–µ—Ç—å
    console.log('\n–®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞');
    console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–ø—Ä–æ—Å—ã PATCH –≤ Network DevTools');
    console.log('–ò—â–∏—Ç–µ —Å—Ç—Ä–æ–∫—É "hold" –≤–º–µ—Å—Ç–æ "held" –≤ payload');
  } catch (e) {
    console.error('üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', e);
  }
};

export { testSeatStatuses };

// –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é
if (typeof window !== 'undefined') {
  console.log('–ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–æ–≤...');
  testSeatStatuses();
}