import supabase from '../lib/supabase';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
export const testSeatStatusFix = async () => {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å seat status...');
  
  try {
    // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –º–µ—Å—Ç–æ
    const testEventId = 'test-fix-123';
    const testSeatId = 'test-seat-fix-1';
    
    console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –º–µ—Å—Ç–æ...');
    const { error: insertError } = await supabase
      .from('event_seats_fanaticka_7a3x9d')
      .upsert([{
        event_id: testEventId,
        seat_id: testSeatId,
        status: 'free',
        section: 'TEST',
        row: 1
      }]);
    
    if (insertError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–µ—Å—Ç–∞:', insertError);
      return false;
    }
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    
    // 2. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ "held"
    console.log('2Ô∏è‚É£ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ "held"...');
    const { data: updateData, error: updateError } = await supabase
      .from('event_seats_fanaticka_7a3x9d')
      .update({ status: 'held' })
      .eq('event_id', testEventId)
      .eq('seat_id', testSeatId)
      .select();
    
    if (updateError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:', updateError);
      return false;
    }
    
    console.log('‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:', updateData);
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–∏–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ...');
    const { data: checkData, error: checkError } = await supabase
      .from('event_seats_fanaticka_7a3x9d')
      .select('status')
      .eq('event_id', testEventId)
      .eq('seat_id', testSeatId)
      .single();
    
    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', checkError);
      return false;
    }
    
    console.log('üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ:', checkData.status);
    
    if (checkData.status === 'held') {
      console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢! –°—Ç–∞—Ç—É—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ "held"');
      return true;
    } else if (checkData.status === 'hold') {
      console.error('‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ï –†–ê–ë–û–¢–ê–ï–¢! –°—Ç–∞—Ç—É—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ "hold"');
      return false;
    } else {
      console.warn(`‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${checkData.status}`);
      return false;
    }
  } catch (e) {
    console.error('üí• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', e);
    return false;
  }
};

// –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (typeof window !== 'undefined') {
  console.log('–ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...');
  testSeatStatusFix().then(success => {
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:', success ? '–£–°–ü–ï–®–ù–û' : '–ù–ï–£–î–ê–ß–ù–û');
  });
}